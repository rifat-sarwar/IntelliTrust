"""Initial migration

Revision ID: c99da78fbb8d
Revises: 
Create Date: 2025-08-31 03:25:53.019840

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c99da78fbb8d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('did', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'ISSUER', 'HOLDER', 'VERIFIER', name='userrole'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING', name='userstatus'), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('profile_picture_url', sa.String(length=500), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_did'), 'users', ['did'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('organization_type', sa.Enum('UNIVERSITY', 'HOSPITAL', 'BANK', 'GOVERNMENT', 'CORPORATE', 'OTHER', name='organizationtype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING_VERIFICATION', name='organizationstatus'), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verified_by_id', sa.Integer(), nullable=True),
    sa.Column('blockchain_org_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['verified_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('blockchain_org_id')
    )
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_table('credential_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('schema', sa.JSON(), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('issuer_organization_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['issuer_organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_credential_types_id'), 'credential_types', ['id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('document_type', sa.Enum('ACADEMIC_DEGREE', 'TRANSCRIPT', 'CERTIFICATE', 'ID_DOCUMENT', 'CONTRACT', 'MEDICAL_RECORD', 'FINANCIAL_DOCUMENT', 'PROPERTY_DOCUMENT', 'OTHER', name='documenttype'), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING_VERIFICATION', 'VERIFIED', 'REJECTED', 'EXPIRED', 'REVOKED', name='documentstatus'), nullable=False),
    sa.Column('file_hash', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('file_url', sa.String(length=500), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('issuer_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('blockchain_hash', sa.String(length=255), nullable=True),
    sa.Column('blockchain_tx_id', sa.String(length=255), nullable=True),
    sa.Column('ai_verified', sa.Boolean(), nullable=False),
    sa.Column('ai_confidence_score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['issuer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_blockchain_hash'), 'documents', ['blockchain_hash'], unique=True)
    op.create_index(op.f('ix_documents_file_hash'), 'documents', ['file_hash'], unique=True)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_table('ai_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('analysis_type', sa.Enum('DOCUMENT_AUTHENTICITY', 'FORENSIC_ANALYSIS', 'TEMPLATE_VALIDATION', 'CONTENT_ANALYSIS', 'OCR_EXTRACTION', name='analysistype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='analysisstatus'), nullable=False),
    sa.Column('ai_engine_version', sa.String(length=100), nullable=True),
    sa.Column('model_used', sa.String(length=255), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('is_authentic', sa.Boolean(), nullable=True),
    sa.Column('analysis_result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_analyses_id'), 'ai_analyses', ['id'], unique=False)
    op.create_table('credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credential_type_id', sa.Integer(), nullable=False),
    sa.Column('holder_id', sa.Integer(), nullable=False),
    sa.Column('issuer_id', sa.Integer(), nullable=False),
    sa.Column('issuer_organization_id', sa.Integer(), nullable=True),
    sa.Column('credential_data', sa.JSON(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'ISSUED', 'REVOKED', 'EXPIRED', 'SUSPENDED', name='credentialstatus'), nullable=False),
    sa.Column('vc_id', sa.String(length=255), nullable=False),
    sa.Column('issuance_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expiration_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('blockchain_hash', sa.String(length=255), nullable=True),
    sa.Column('blockchain_tx_id', sa.String(length=255), nullable=True),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_by_id', sa.Integer(), nullable=True),
    sa.Column('revocation_reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['credential_type_id'], ['credential_types.id'], ),
    sa.ForeignKeyConstraint(['holder_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['issuer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['issuer_organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['revoked_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_credentials_blockchain_hash'), 'credentials', ['blockchain_hash'], unique=True)
    op.create_index(op.f('ix_credentials_id'), 'credentials', ['id'], unique=False)
    op.create_index(op.f('ix_credentials_vc_id'), 'credentials', ['vc_id'], unique=True)
    op.create_table('document_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('value_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_metadata_id'), 'document_metadata', ['id'], unique=False)
    op.create_table('document_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('file_hash', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_url', sa.String(length=500), nullable=False),
    sa.Column('change_reason', sa.Text(), nullable=True),
    sa.Column('changed_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_versions_id'), 'document_versions', ['id'], unique=False)
    op.create_table('ai_analysis_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('analysis_id', sa.Integer(), nullable=False),
    sa.Column('result_type', sa.String(length=100), nullable=False),
    sa.Column('result_data', sa.JSON(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('model_version', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['analysis_id'], ['ai_analyses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_analysis_results_id'), 'ai_analysis_results', ['id'], unique=False)
    op.create_table('blockchain_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.Enum('DOCUMENT_HASH', 'CREDENTIAL_ISSUE', 'CREDENTIAL_REVOKE', 'VERIFICATION', 'ORGANIZATION_REGISTER', name='transactiontype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'FAILED', 'REVERTED', name='transactionstatus'), nullable=False),
    sa.Column('blockchain_tx_hash', sa.String(length=255), nullable=True),
    sa.Column('blockchain_block_number', sa.Integer(), nullable=True),
    sa.Column('blockchain_network', sa.String(length=100), nullable=False),
    sa.Column('blockchain_channel', sa.String(length=100), nullable=True),
    sa.Column('blockchain_chaincode', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('credential_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('transaction_data', sa.JSON(), nullable=False),
    sa.Column('gas_used', sa.Integer(), nullable=True),
    sa.Column('gas_price', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['credential_id'], ['credentials.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blockchain_transactions_blockchain_tx_hash'), 'blockchain_transactions', ['blockchain_tx_hash'], unique=True)
    op.create_index(op.f('ix_blockchain_transactions_id'), 'blockchain_transactions', ['id'], unique=False)
    op.create_table('verifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('verification_type', sa.Enum('DOCUMENT', 'CREDENTIAL', 'QR_CODE', 'API', name='verificationtype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'VERIFIED', 'REJECTED', 'EXPIRED', name='verificationstatus'), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('credential_id', sa.Integer(), nullable=True),
    sa.Column('verifier_id', sa.Integer(), nullable=False),
    sa.Column('verifier_organization_id', sa.Integer(), nullable=True),
    sa.Column('verification_hash', sa.String(length=255), nullable=False),
    sa.Column('verification_code', sa.String(length=100), nullable=True),
    sa.Column('verification_url', sa.String(length=500), nullable=True),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_result', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['credential_id'], ['credentials.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['verifier_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['verifier_organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verifications_id'), 'verifications', ['id'], unique=False)
    op.create_index(op.f('ix_verifications_verification_hash'), 'verifications', ['verification_hash'], unique=True)
    op.create_table('verification_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('verification_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['verification_id'], ['verifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verification_logs_id'), 'verification_logs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_verification_logs_id'), table_name='verification_logs')
    op.drop_table('verification_logs')
    op.drop_index(op.f('ix_verifications_verification_hash'), table_name='verifications')
    op.drop_index(op.f('ix_verifications_id'), table_name='verifications')
    op.drop_table('verifications')
    op.drop_index(op.f('ix_blockchain_transactions_id'), table_name='blockchain_transactions')
    op.drop_index(op.f('ix_blockchain_transactions_blockchain_tx_hash'), table_name='blockchain_transactions')
    op.drop_table('blockchain_transactions')
    op.drop_index(op.f('ix_ai_analysis_results_id'), table_name='ai_analysis_results')
    op.drop_table('ai_analysis_results')
    op.drop_index(op.f('ix_document_versions_id'), table_name='document_versions')
    op.drop_table('document_versions')
    op.drop_index(op.f('ix_document_metadata_id'), table_name='document_metadata')
    op.drop_table('document_metadata')
    op.drop_index(op.f('ix_credentials_vc_id'), table_name='credentials')
    op.drop_index(op.f('ix_credentials_id'), table_name='credentials')
    op.drop_index(op.f('ix_credentials_blockchain_hash'), table_name='credentials')
    op.drop_table('credentials')
    op.drop_index(op.f('ix_ai_analyses_id'), table_name='ai_analyses')
    op.drop_table('ai_analyses')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_file_hash'), table_name='documents')
    op.drop_index(op.f('ix_documents_blockchain_hash'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_credential_types_id'), table_name='credential_types')
    op.drop_table('credential_types')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_table('organizations')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_did'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
